---

# erlang

# save this
# https://packages.erlang-solutions.com/erlang/esl-erlang/FLAVOUR_1_general/esl-erlang_18.3-1~ubuntu~precise_amd64.deb

- name: create package cache dir
  file: path=/home/{{rem_user}}/.pkg state=directory group={{rem_user}} owner={{rem_user}}

# FOR x86_64 (64 bit UBUNTU Dev Boxes and Servers)
# see http://www.erlang-solutions.com/downloads/download-erlang-otp

#- name: ubuntu apt_key
#  apt_key: 
#    url: http://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
#  when: is_x86_64

- name: ubuntu repository
  apt_repository: 
    repo:  'deb http://packages.erlang-solutions.com/ubuntu trusty contrib' 
    state: absent
  when: is_x86_64

#- name: ubuntu remove non-compliant
#  apt: pkg={{item}} state=absent
#  with_items:
#    - erlang
#    - erlang-doc
#    - erlang-manpages
#  when: is_x86_64

- name: get deb file
  become: no
  get_url: 
    url:  https://packages.erlang-solutions.com/erlang/esl-erlang/FLAVOUR_1_general/esl-erlang_{{erlang_version}}~ubuntu~{{ansible_distribution_release}}_amd64.deb
    url:  https://erlangrel.s3.amazonaws.com/builds/erlang_{{erlang_version}}_amd64.deb
    dest: /home/{{rem_user}}/.pkg/erlang_{{erlang_version}}_amd64.deb
  when: is_x86_64

- name: install package
  apt: deb=/home/{{rem_user}}/.pkg/erlang_{{erlang_version}}_amd64.deb
  when: is_x86_64

#- name: ubuntu package
#  apt: pkg={{item}} state=latest 
#  with_items:
#    - esl-erlang
#  when: is_x86_64

# FOR ARM7 (32 bit RPi/Raspbian and Odroid-XU4)
# - compile script at 'files/arm7/build.sh'
# - precompile erlang directory on an arm7 device
# - save the precompile in x-ansible/roles/erlang/files/arm7/<release>

- name: create package cache dir
  file: path=/home/{{rem_user}}/.pkg state=directory group={{rem_user}} owner={{rem_user}}

- name: copy release tarfile
  copy:
    src:  arm7/erl_arm7_{{erlang_arm7_version}}.tar.gz
    dest: /home/{{rem_user}}/.pkg/erl_arm7_{{erlang_arm7_version}}.tar.gz
  when: is_arm7

- name:  expand release tarfile
  shell: tar xf erl_arm7_{{erlang_arm7_version}}.tar.gz
  args:
    chdir:   /home/{{rem_user}}/.pkg
    creates: /home/{{rem_user}}/.pkg/erl_arm7_{{erlang_arm7_version}}
  when: is_arm7

- name:  install arm7 erlang
  become:  yes
  shell: cp -R usr/* /usr
  args:
    chdir:   /home/{{rem_user}}/.pkg/erl_arm7_{{erlang_arm7_version}}
    creates: /usr/local/bin/erl
  when: is_arm7

