#!/usr/bin/env ruby

puts "%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
abort "Usage: dotenv <argfile>" if (file = ARGV[0]).nil?

argfile = ARGV[0].chomp # argfile is written by ansible into a tmp directory

puts "ARGFILE: #{argfile}"

# extract the dotfile path from the argfile
# extract `file="<path>"` from the argfile...
dotfile = if File.exist?(file)
            args = File.read(argfile).split(' ')
            arg  = args.select {|s| s.match(/file\=\"/)}
            arg.first.gsub('\\','').split('=').last.gsub('"','').gsub(' ','').chomp
          else
            abort("Needs argfile (absolute path)")
          end

File.open("/tmp/dotenv.log", 'w') { |f| f.puts "DOTENV #{dotfile.inspect}"}

abort("Dotfile not found (#{dotfile})") unless File.exist?(dotfile)

require 'json'

env = {}

File.readlines(dotfile).each do |line|
  next unless line.include?("=")
  key, val = line.split('=')
  env[key.strip] = val.chomp.strip
end

puts JSON.dump({"ansible_facts" => env})

